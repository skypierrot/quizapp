services:
  quizapp-web:
    container_name: quizapp-dev
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    ports:
      - "3772:3000"
    volumes:
      - ./:/app
      - /app/node_modules
      - ./public/images:/app/public/images
      - ./public/uploads:/app/public/uploads
    environment:
      - NODE_ENV=${NODE_ENV}
      - HOSTNAME=${HOSTNAME}
      - NEXT_WEBPACK_USEPOLLING=${NEXT_WEBPACK_USEPOLLING}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
      - DEBUG=${DEBUG}
      - AUTHENTIK_HOST=${AUTHENTIK_HOST}
      - AUTHENTIK_CLIENT_ID=${AUTHENTIK_CLIENT_ID}
      - AUTHENTIK_CLIENT_SECRET=${AUTHENTIK_CLIENT_SECRET}
      - AUTHENTIK_ISSUER=${AUTHENTIK_ISSUER}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      # React Refresh 안정화를 위한 추가 설정
      - FAST_REFRESH=true
      - REACT_REFRESH_OVERLAY=false
      - NEXT_TELEMETRY_DISABLED=1
    command: sh -c "npm run dev"
    networks:
      - ngnet
    depends_on:
      - quizapp-db

  quizapp-db:
    image: postgres:16-alpine
    container_name: quizapp-db-dev
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${QUIZAPP_DB_USER}
      - POSTGRES_PASSWORD=${QUIZAPP_DB_PASSWORD}
      - POSTGRES_DB=${QUIZAPP_DB_NAME}
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ngnet

volumes:
  db_data_dev:

networks:
  ngnet:
    external: true
